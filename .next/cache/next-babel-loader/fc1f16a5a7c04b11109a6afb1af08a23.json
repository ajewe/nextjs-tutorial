{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ajew/src/nextjs-practice/nextjs-tutorial/pages/index.js\";\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nexport default function Index({\n  shows\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Hello \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/about\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Series\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: shows.map(show => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/show/[id]\",\n          as: `/show/${show.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this)\n      }, show.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nIndex.getInitialProps = async function () {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=sherlock');\n  const data = await res.json();\n  const shows = {\n    shows: data.map(entry => entry.show)\n  };\n  console.log('Rendering...', shows);\n  return shows;\n};","map":{"version":3,"sources":["/Users/ajew/src/nextjs-practice/nextjs-tutorial/pages/index.js"],"names":["Link","fetch","Index","shows","map","show","id","getInitialProps","res","data","json","entry","console","log"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA0B;AACvC,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,QAAX;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,gBACGA,KAAK,CAACC,GAAN,CAAWC,IAAI,iBACd;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,YAAX;AAAwB,UAAA,EAAE,EAAG,SAAQA,IAAI,CAACC,EAAG,EAA7C;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,SAASD,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAmBD;;AAEDJ,KAAK,CAACK,eAAN,GAAwB,kBAAiB;AACvC,QAAMC,GAAG,GAAG,MAAMP,KAAK,CAAC,gDAAD,CAAvB;AACA,QAAMQ,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACA,QAAMP,KAAK,GAAG;AAAEA,IAAAA,KAAK,EAAEM,IAAI,CAACL,GAAL,CAAUO,KAAK,IAAIA,KAAK,CAACN,IAAzB;AAAT,GAAd;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BV,KAA5B;AAEA,SAAOA,KAAP;AACD,CAPD","sourcesContent":["import Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nexport default function Index({ shows }) {\n  return (\n    <>\n      <div>Hello </div>\n      <Link href=\"/about\">\n        <a>About</a>\n      </Link>\n      <h1>Series</h1>\n      <ul>\n        {shows.map( show => \n          <li key={show.id}>\n            <Link href=\"/show/[id]\" as={`/show/${show.id}`}>\n              <a>{}</a>\n            </Link>\n          </li>\n        )}\n      </ul>\n\n    </>\n  )\n}\n\nIndex.getInitialProps = async function() {\n  const res = await fetch('https://api.tvmaze.com/search/shows?q=sherlock');\n  const data = await res.json();\n  const shows = { shows: data.map( entry => entry.show ) };\n  console.log('Rendering...', shows);\n\n  return shows;\n}\n"]},"metadata":{},"sourceType":"module"}